{"version":3,"sources":["logo.svg","Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Links","socialLinks","href","icon","Header","props","useState","displayFullHeader","setfullHeader","useEffect","location","ClassNames","push","className","join","trim","alt","src","Logo","title","width","onClick","prevState","aria-label","map","element","index","to","target","rel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAAe,MAA0B,iC,cCMnCA,EAAQ,CAAC,OAAQ,UAAW,YAAa,WAAY,WACrDC,EAAc,CAChB,CAAEC,KAAM,4BAA6BC,KAAM,cAAC,IAAD,KAC3C,CAAED,KAAM,2BAA4BC,KAAM,cAAC,IAAD,KAC1C,CAAED,KAAM,4BAA6BC,KAAM,cAAC,IAAD,KAC3C,CAAED,KAAM,2BAA4BC,KAAM,cAAC,IAAD,MAwD/BC,EArDA,SAACC,GAAW,IAAD,EAEqBC,oBAAS,GAF9B,mBAEfC,EAFe,KAEIC,EAFJ,KAKtBC,qBAAU,WACND,GAAc,KACf,CAACH,EAAMK,WAGV,IAKIC,EAAa,CAAC,UASlB,OARIJ,EACAI,EAAWC,KAAK,QAGhBD,EAAWC,KAAK,SAKhB,wBAAQC,UAAWF,EAAWG,KAAK,KAAKC,OAAxC,SACI,sBAAKF,UAAU,YAAf,UACI,qBAAIA,UAAU,UAAd,UACI,qBAAKG,IAAI,kBAAkBC,IAAKC,EAAMC,MAAM,gBAAgBC,MAAO,QAClE,wBAAQC,QAnBJ,WACjBb,GAAc,SAAAc,GAAS,OAAKA,MAkBgBC,aAAY,gBAA3C,SAA2D,cAAC,IAAD,SAEhE,8BACI,6BACKvB,EAAMwB,KAAI,SAACC,EAASC,GACjB,OACI,6BAAiB,eAAC,IAAD,CAAMC,GAAE,UAAKF,GAAWF,aAAA,aAAmBE,GAA3C,cAAwDA,EAAxD,QAARC,UAKzB,oBAAIb,UAAU,cAAd,SACKZ,EAAYuB,KAAI,SAACC,EAASC,GACvB,OACI,6BACI,mBAAGxB,KAAMuB,EAAQvB,KAAM0B,OAAO,SAASC,IAAI,aAAaN,aAAA,aAAmBE,EAAQvB,MAAnF,SAA4FuB,EAAQtB,QAD/FuB,EAAQ,eCzC9BI,EAZH,WACV,OACE,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,WCGKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.84e2e3b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.f13078c1.svg\";","import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"./logo.svg\";\r\nimport { FaBehance, FaFacebook, FaLinkedin, FaTwitter, FaBars } from 'react-icons/fa';\r\n\r\n\r\nconst Links = [\"home\", \"aboutUs\", \"contactUs\", \"projects\", \"profile\"]\r\nconst socialLinks = [\r\n    { href: \"https://www.facebook.com/\", icon: <FaFacebook /> },\r\n    { href: \"https://twitter.com/home\", icon: <FaTwitter /> },\r\n    { href: \"https://www.linkedin.com/\", icon: <FaLinkedin /> },\r\n    { href: \"https://www.behance.net/\", icon: <FaBehance /> }\r\n]\r\n\r\nconst Header = (props) => {\r\n\r\n    const [displayFullHeader, setfullHeader] = useState(false);\r\n\r\n    // To Close the Header after Routing\r\n    useEffect(() => {\r\n        setfullHeader(false)\r\n    }, [props.location])\r\n\r\n\r\n    const ToggleHeader = () => {\r\n        setfullHeader(prevState => !prevState);\r\n    }\r\n\r\n\r\n    let ClassNames = [\"Header\"]\r\n    if (displayFullHeader) {\r\n        ClassNames.push(\"Open\")\r\n    }\r\n    else {\r\n        ClassNames.push(\"Close\");\r\n    }\r\n\r\n\r\n    return (\r\n        <header className={ClassNames.join(\" \").trim()}>\r\n            <div className=\"Container\">\r\n                <h1 className=\"Heading\">\r\n                    <img alt=\"Codding Addict \" src={Logo} title=\"Coding Addict\" width =\"250\" />\r\n                    {<button onClick={ToggleHeader} aria-label =\"Toggle Header\"><FaBars /></button>}\r\n                </h1>\r\n                <nav>\r\n                    <ul>\r\n                        {Links.map((element, index) => {\r\n                            return (\r\n                                <li key={index} ><Link to={`${element}`} aria-label ={`to ${element}`}> {element} </Link></li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </nav>\r\n                <ul className=\"SocialLinks\">\r\n                    {socialLinks.map((element, index) => {\r\n                        return (\r\n                            <li key={index + 10}>\r\n                                <a href={element.href} target=\"_blank\" rel=\"noreferrer\" aria-label ={`to ${element.href}`}>{element.icon}</a>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header","import './App.css';\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\n\nconst App = () => {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Header />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}